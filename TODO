the translation of the vertices must be done at the time that the axes are generated and the vertices of the shape must be the modified ones at the time of collision check

if might be best to have two sets of vertices to represent the collision body for each game object, one to represent the origin shape and the second to hold the modified vertices after the transformation matrix is applied

using a transform matrix on a table that will just be overwritten each update and not created new will help performance also don't recalculate the transformed vertices of an object that hasn't moved (OPTOMIZATION)


ADD TRANSFORM SUPPORT TO THE SAT ALGO!!!

Axes and edges should be calculated on each update and the transformation matrix applied and stored to the transformed vertices table, actually they should be done in the opposite order the transform applied then the rest

For some reason the axes are generated from 0,0 and still cause a collision with the other object

I need to use an identity set of vertices and translate the matrix from that or use only the delta for each frame when we translate (only the difference)
